/*
In-line style has the highest right to style the html
If two elements have the same name, then who come after will overwrite the one that come first
This will overwrite anything which was defined in the first one, but it also add new definitions if the first one does not have
This is something like updating

The order or the specificity or the css rules
In-line selector > id selector > .class, :pseudo-class and attribute selector > tag selector
If you want to have a default style for every single element in the html file, then add those properties inside the parent tag
Something like the <body> tag
If you have some element inside and you want to force it to inherit from the parents then use the keyword inherit

There are four type of combinator

+ Adjacent Sibling

h1 + p {
  color: red;
}

if we have a div like this, then if there is a pair of h1+p go together
then the p tag will have the css applied into it
<div>
<h2>Not Applied</h2>
<p>CSS applied</p
</div>

+ General Sibling

h1 ~ p {
  color: red;
}

if we have a div like this, then if there is a h2 tag before the target tag, then there will be
a css style applied into the target tag
<div>
<h2>Not Applied</h2>
<p>CSS applied</p
<h2>Not Applied</h2>
<h3>Not Applied</h3>
<p>CSS Applied</p>
</div>

+ Child

div > p {
  color: red;
}

If the p tag is the direct child of the div element, then it will have the css applied into it
<div>
  <div>Not Applied</div>
  <p>CSS applied</p>
  <div>Not Applied</div>
  <article>
    <p>Not Applied because not a direct child</p>
  </article>
</div>

+ Descendant

div p {
  color: red;
}

If the p tag is the direct or non-direct child of the div element, then it will have the css applied into it
<div>
  <div>Not Applied</div>
  <p>CSS applied</p>
  <div>Not Applied</div>
  <article>
    <p>CSS applied</p>
  </article>
</div>

margin top right bottom left
margin top-bottom left-right
margin all

height and width properties will set the element height and width based on the value of  their parents
*/

* {
  box-sizing: border-box;
}

body {
  font-family: 'Roboto Slab', serif;
  margin: 0;
}

#plans {
  width: 80%;
  margin: auto;
}

#product-overview {
  position: relative;
  background: url("https://images.pexels.com/photos/1438081/pexels-photo-1438081.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-origin: border-box;

  width: 100%;
  height: 700px;
  padding: 10px;
  margin-top: 49px;
  z-index: -1;
}

.section-title {
  color: green;
  text-align: center;
  font-weight: bold;
  font-size: 35px;
}

#product-overview h1 {
  color: white;
  font-family: 'Bree Serif', serif;
  font-size: 50px;
  position: absolute;
  bottom: 50%;
  left: 30px;
  margin-bottom: 0;
}

.main-header {
  position: fixed;
  top: 0;
  left: 0;
  background-color: #2ddf5c;
  width: 100%;
  padding: 8px 16px;
}

.main-header > div {
  display: inline-block;
  vertical-align: middle;
  position: relative;
  z-index: 1;
}

.main-header__brand {
  color: #0e4f1f;
  text-decoration: none;
  font-weight: bold;
  font-size: 22px;
}

.main-header__brand img {
  width: 60px;
  height: 60px;
}

.main-nav {
  display: inline-block;
  width: calc(100% - 75px);
  vertical-align: middle;
}

.main-nav__items {
  margin: 0;
  padding: 0;
  list-style: none;
  text-align: right;
}

.main-nav__item {
  display: inline;
  margin: 0 20px;
}

.main-nav__item a {
  text-decoration: none;
  color: #0e4f1f;
  font-weight: bold;
}

.main-nav__item--cta a{
  color: white;
  background: #ff1b68;
  padding: 8px 16px;
  border-radius: 8px;
}

.main-nav__item a:active,
.main-nav__item a:hover,
.main-nav__item a:focus {
  color: white;
  padding-bottom: 5px;
  border-bottom: white solid 4px;
}

.main-nav__item--cta a:active,
.main-nav__item--cta a:hover,
.main-nav__item--cta a:focus {
  color: #ff1b68;
  background: white;
  border: none;
}

.hosting-plan__options {
  text-align: center;
}

.hosting-plan {
  background: #d5ffdc;
  text-align: center;
  margin: 8px;
  padding: 16px;
  display: inline-block;
  width: 32%;
  vertical-align: middle;
  font-weight: bold;
}

.hosting-plan > ul {
  padding: 0;
}

.hosting-plan > ul > li {
  list-style: none;
  padding: 0;
  margin: 0;
}

.recommended-hosting-plan {
  font-family: 'Bree Serif', serif;
  font-size: 20px;
  background: #19b84c;
  color: white;
  box-shadow: 2px 2px 2px 2px rgba(0,0,0, 0.4);
  border-radius: 15px;
}

.hosting-plan button {
  font-family: 'Bree Serif', serif;
  font-size: 20px;
  color: white;
  background: #0e4f1f;
  border-radius: 20px;
  border: none;
  padding: 10px 15px;
}

.hosting-plan button:hover,
.hosting-plan button:active {
  background: whitesmoke;
  color: #0e4f1f;
  outline-style: none;
}

.hosting-plan button:focus {
  outline-style: none;
}

.recommended-hosting-plan button {
  font-family: 'Bree Serif', serif;
  font-size: 25px;
  color: white;
  background: #ff1b68;
  border-radius: 20px;
  border: none;
  padding: 10px 15px;
}

.recommended-hosting-plan button:hover,
.recommended-hosting-plan button:active {
  background: white;
  color: #ff1b68;
  outline-style: none;
}

.recommended-hosting-plan button:focus {
  outline-style: none;
}

.recommended-hosting-plan-title {
  background: white;
  color: #19b84c;
  box-shadow: 2px 2px 2px 2px rgba(0,0,0,0.4);
  padding: 10px 0px;
  margin: 5px;
  border-radius: 10px;
}

.hosting-plan__name {
  color: #0e4f1f;
}

.hosting-plan__name_recommended {
  color: white;
}

.hosting-plan__price {
  color: dimgrey;
}

.hosting-plan__price_recommended {
  color: #0e4f1f;
}

.hosting-plan__description {

}

#key-features {
  background: #ff1b68;
  width: 100%;
  margin: auto;
  margin-top: 80px;
  padding: 16px;
}

#key-features .section-title {
  color: white;
  margin: 32px;
}

.key-feature__list {
  list-style: none;
  margin: 0;
  padding: 0;
  text-align: center;
}

.key-feature {
  display: inline-block;
  width: 33%;
  text-align: center;
  vertical-align: top;
}

.key-feature__image {
  background: #ffcede;
  width: 128px;
  height: 128px;
  border: 2px solid #424242;
  border-radius: 50%;
  margin: auto;
}

.key-feature__description {
  text-align: center;
  font-weight: bold;
  color: white;
  font-family: 'Bree Serif', serif;
  font-size: 25px;
}

#footer {
  padding: 0;
  margin: 0;
  background: black;
}

.footer-list {
  display: inline-block;
  width: 16%;
  margin: 40px auto 30px auto;
  padding: 20px;
  list-style: none;
  vertical-align: top;
}

.footer-list > li {
  font-family: 'Bree Serif', serif;
  font-weight: bold;
  font-size: 18px;
}

.footer-list > li a:active,
.footer-list > li a:focus,
.footer-list > li a:hover {
  text-decoration: none;
  color: white;
}

.footer-list .footer-title {
  color: white;
  font-weight: bold;
}

/*When we use the stacking theory
then there are few things to remember
The stacking can just be created using the fixed, sticky or absolute/relative in combination with z-index
The stacking will work as a namespace so the child element can have the z-index without affecting other element outside of its parent class*/








